#log4j.rootLogger=日志级别，appender1, appender2, …rootLogger默认是对整个工程生效
#注意，如果只想对某些包操作，那么：log4j.logger.com.hutu=info, stdout，表示该日志对package com.hutu生效
#注意，需在控制台输入，只需将其中一个appender定义为stdout即可
#注意，这样做可以区分dev/线上，也可以减小性能影响：if(log.isDebugEnabled()){log.debug();}

#ServerDailyRollingFile,为系统指定输出位置，信息等。	
log4j.rootLogger=all, ServerDailyRollingFile,stdout 
#日志输出到哪里.
#此句为定义名为stdout的输出端是哪种类型
#输出到控制台Console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#日志布局格式
#此句为定义名为stdout的输出端的layout是哪种类型，可以是
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 

log4j.appender.stdout.layout.ConversionPattern=[QC]%d{yyyy-MM-dd HH:mm:ss} %p [%c] %l-%m%n



#日志输出到哪里
#词句定义名为ServerDailyRollingFile的输出端是那种类型
#每天产生一个日志文件
log4j.appender.ServerDailyRollingFile=org.apache.log4j.DailyRollingFileAppender 
#日志后缀格式
log4j.appender.ServerDailyRollingFile.DatePattern='.'yyyy-MM-dd
#日志生成到指定的位置
log4j.appender.ServerDailyRollingFile.File=C://logs/notify-subscription.log 

log4j.appender.ServerDailyRollingFile.layout=org.apache.log4j.PatternLayout
#日志输出格式
#如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern
log4j.appender.ServerDailyRollingFile.layout.ConversionPattern=%d %p %c %l- %m%n 
#不解释，追加往后写
log4j.appender.ServerDailyRollingFile.Append=true

